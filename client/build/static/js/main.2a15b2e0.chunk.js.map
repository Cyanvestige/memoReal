{"version":3,"sources":["constants/actions.js","api/index.js","actions/contents.js","components/Navbar/HeaderOption.js","components/Navbar/Header.js","components/Form/Form.js","components/Edit/EditForm.js","components/Create/CreateForm.js","components/Home/Home.js","components/Test/Test.js","components/Contents/Content/Content.js","components/Contents/Content/TagCard.js","components/Contents/Tags.js","components/Contents/Content/ContentList.js","components/Auth/login_logo.png","components/Auth/Auth.js","actions/auth.js","App.js","reducers/currid.js","reducers/auth.js","reducers/index.js","reducers/contents.js","index.js"],"names":["CREATE","UPDATE","DELETE","FETCH_ALL","SET_CURRID","AUTH","LOGOUT","API","axios","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","updateContent","id","content","patch","deleteContent","delete","logIn","formData","post","signUp","getContents","dispatch","a","get","data","type","payload","console","log","createContent","newContent","api","setCurrID","err","HeaderOption","avatar","Icon","title","className","Avatar","src","Header","useState","user","setUser","useDispatch","history","useHistory","location","useLocation","logout","push","useEffect","decode","exp","Date","getTime","to","HomeIcon","pathname","state","option","ForumIcon","CreateIcon","ReviewIcon","TestIcon","result","name","Button","variant","onClick","color","Form","setData","handleChange","handleSubmit","style","width","paddingBottom","value","onChange","e","target","tag","marginTop","checked","for","rows","choice_1","choice_2","choice_3","choice_4","answer","EditForm","currID","useSelector","currid","contents","find","_id","contentType","hasChoices","setType","createAt","update","goBack","preventDefault","length","window","alert","CreateForm","Home","now","date","getFullYear","getMonth","slice","getDate","getHours","hour","setHour","getMinutes","minute","setMinute","getSeconds","second","setSecond","interval","setInterval","clearInterval","transform","Test","index","setIndex","filter","filteredContents","score","setScore","setAnswer","handleInputChange","toFixed","createdAt","whiteSpace","margin","Content","filteredContent","setfilteredContent","showAnswer","setShowAnswer","userAnswer","setUserAnswer","deleteAndResetCurrID","handleDelete","googleId","creator","TagCard","numberOfPosts","maxWidth","textDecoration","Card","Typography","Tags","uniqTags","Set","map","ContentList","setFilteredContents","Auth","email","password","confirmPassword","setFormData","passwordWrongError","setPasswordWrongError","userNotExistError","setUserNotExistError","userAlreadyExistsError","setUserAlreadyExistsError","confirmPasswordNotSameError","setConfirmPasswordNotSameError","isSignup","setIsSignUp","switchMode","googleSuccess","res","profileObj","tokenId","loginLogo","onSubmit","signup","then","promise","response","status","login","placeholder","clientId","render","renderProps","disabled","onSuccess","onFailure","cookiePolicy","App","height","padding","boxShadow","exact","path","component","action","authReducer","authData","setItem","stringify","clear","combineReducers","auth","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2a15b2e0.chunk.js","sourcesContent":["export const CREATE = \"CREATE\";\nexport const UPDATE = \"UPDATE\";\nexport const DELETE = \"DELETE\";\nexport const FETCH_ALL = \"FETCH_ALL\";\nexport const LIKE = \"LIKE\";\nexport const SET_CURRID = \"SET_CURRID\";\nexport const AUTH = \"AUTH\";\nexport const LOGOUT = \"LOGOUT\";\n","import axios from \"axios\";\n\n// use axios to connect client side withs server side\nconst API = axios.create({ baseURL: \"https://memoreal-server.herokuapp.com/\" });\n\n// use interceptors to keep the login state for the user by trying to get the \"profile\" from the local storage\nAPI.interceptors.request.use((req) => {\n    if (localStorage.getItem(\"profile\")) {\n        // learn more about Bearer: https://swagger.io/docs/specification/authentication/bearer-authentication/\n        req.headers.Authorization = `Bearer ${\n            JSON.parse(localStorage.getItem(\"profile\")).token\n        }`;\n    }\n    return req;\n});\n\n// define all CRUD methods on the client side interacting with the server side\nexport const fetchContents = () => API.get(\"/contents\");\nexport const createContent = (newContent) => API.post(\"/contents\", newContent);\nexport const updateContent = (id, content) =>\n    API.patch(`/contents/${id}`, content);\nexport const deleteContent = (id) => API.delete(`/contents/${id}`);\n\nexport const logIn = (formData) => API.post(\"/user/login\", formData);\nexport const signUp = (formData) => API.post(\"/user/signup\", formData);\n","import {\n    FETCH_ALL,\n    CREATE,\n    UPDATE,\n    DELETE,\n    SET_CURRID,\n} from \"../constants/actions\";\nimport * as api from \"../api\";\n\n// the CRUD methods for redux reducers\n\nexport const getContents = () => async (dispatch) => {\n    try {\n        const { data } = await api.fetchContents();\n        dispatch({ type: FETCH_ALL, payload: data });\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const createContent = (content) => async (dispatch) => {\n    try {\n        const { data } = await api.createContent(content);\n        dispatch({ type: CREATE, payload: data });\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const updateContent = (id, content) => async (dispatch) => {\n    try {\n        const { data } = await api.updateContent(id, content);\n        dispatch({ type: UPDATE, payload: data });\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const deleteContent = (id) => async (dispatch) => {\n    try {\n        const { data } = await api.deleteContent(id);\n        dispatch({ type: DELETE, payload: data });\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const setCurrID = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: SET_CURRID, payload: id });\n    } catch (err) {\n        console.log(err);\n    }\n};\n","import React from \"react\";\nimport \"./HeaderOption.css\";\nimport { Avatar } from \"@mui/material\";\nfunction HeaderOption({ avatar, Icon, title }) {\n    return (\n        <div className=\"headerOption  \">\n            {Icon && <Icon className=\"headerOption__icon mb-0.5\" />}\n            {avatar && (\n                <Avatar className=\"headerOption__icon\" src={avatar}></Avatar>\n            )}\n            <h3 className=\"headerOption__title  no-underline\">{title}</h3>\n        </div>\n    );\n}\n\nexport default HeaderOption;\n","import React, { useState, useEffect } from \"react\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport HomeIcon from \"@mui/icons-material/Home\";\nimport CreateIcon from \"@mui/icons-material/Create\";\nimport ReviewIcon from \"@mui/icons-material/MenuBook\";\nimport ForumIcon from \"@mui/icons-material/Forum\";\nimport TestIcon from \"@mui/icons-material/DesignServices\";\nimport \"./Header.css\";\nimport decode from \"jwt-decode\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport HeaderOption from \"./HeaderOption\";\nimport { Button, Avatar, Typography } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nfunction Header() {\n    const [user, setUser] = useState(\n        JSON.parse(localStorage.getItem(\"profile\"))\n    );\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = useLocation();\n    const logout = () => {\n        dispatch({ type: \"LOGOUT\" });\n        history.push(\"/\");\n        setUser(null);\n    };\n    useEffect(() => {\n        const token = user?.token;\n        if (token) {\n            const decodedToken = decode(token);\n            if (decodedToken.exp * 1000 < new Date().getTime) {\n                logout();\n            }\n        }\n        setUser(JSON.parse(localStorage.getItem(\"profile\")));\n    }, [location]);\n\n    return (\n        <div className=\"bg-gray-100 p-2 border-b-2 flex items-center justify-evenly\">\n            <div className=\"header__left\">\n                <h2>MemoReal</h2>\n            </div>\n            <div className=\"flex justify-center items-center ms-5\">\n                <div className=\"headeroptions mt-2 flex\">\n                    <Link to=\"/\" className=\"no-underline\">\n                        <HeaderOption Icon={HomeIcon} title=\"Home\" />\n                    </Link>\n                    <Link\n                        to={{\n                            pathname: `/tags`,\n                            state: { option: \"community\" },\n                        }}\n                        className=\"no-underline\"\n                    >\n                        <HeaderOption Icon={ForumIcon} title=\"Community\" />\n                    </Link>\n                    {user && (\n                        <div className=\"user-functions flex\">\n                            <Link to=\"/create\" className=\"no-underline\">\n                                <HeaderOption\n                                    Icon={CreateIcon}\n                                    title=\"Create\"\n                                />\n                            </Link>\n                            <Link\n                                to={{\n                                    pathname: `/tags`,\n                                    state: { option: \"review\" },\n                                }}\n                                className=\"no-underline\"\n                            >\n                                <HeaderOption\n                                    Icon={ReviewIcon}\n                                    title=\"Review\"\n                                />\n                            </Link>\n                            <Link\n                                to={{\n                                    pathname: `/tags`,\n                                    state: { option: \"test\" },\n                                }}\n                                className=\"no-underline\"\n                            >\n                                <HeaderOption Icon={TestIcon} title=\"Test\" />\n                            </Link>\n                        </div>\n                    )}\n                </div>\n                {user ? (\n                    <div className=\"flex pb-1 ms-4\">\n                        <h5 className=\"mr-4 mt-2\">{`${user.result.name}`}</h5>\n                        <Button variant=\"contained\" onClick={logout}>\n                            Log out\n                        </Button>\n                    </div>\n                ) : (\n                    <Link to=\"/auth\" className=\"no-underline ms-2\">\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className=\"h-10 hover:text-white-100\"\n                        >\n                            {\"Log In\"}\n                        </Button>\n                    </Link>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","const Form = ({ type, data, setData, handleChange, handleSubmit }) => {\n    return (\n        <div>\n            <div style={{ width: \"35vw\", paddingBottom: \"10%\" }}>\n                <div className=\"mb-4\">\n                    <label className=\"form-label\">Title</label>\n                    <input\n                        className=\"form-control\"\n                        id=\"title\"\n                        value={data.title}\n                        onChange={(e) =>\n                            setData({ ...data, title: e.target.value })\n                        }\n                    />\n                </div>\n\n                <div className=\"mb-4\">\n                    <label className=\"form-label\">Tag</label>\n                    <input\n                        className=\"form-control\"\n                        id=\"tag\"\n                        value={data.tag}\n                        onChange={(e) =>\n                            setData({ ...data, tag: e.target.value })\n                        }\n                    />\n                </div>\n                <div\n                    className=\"checks d-flex justify-content-evenly\"\n                    style={{ marginTop: \"2em\" }}\n                >\n                    <div className=\"form-check\">\n                        <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            onChange={handleChange}\n                            value=\"fillin\"\n                            checked={type == \"fillin\"}\n                        />\n                        <label\n                            className=\"form-check-label\"\n                            for=\"flexRadioDefault1\"\n                        >\n                            Fill-in-the-blank\n                        </label>\n                    </div>\n                    <div className=\"form-check\">\n                        <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            value=\"multiple\"\n                            onChange={handleChange}\n                            checked={type == \"multiple\"}\n                        />\n                        <label\n                            className=\"form-check-label\"\n                            for=\"flexRadioDefault2\"\n                        >\n                            Multiple Choice\n                        </label>\n                    </div>\n                </div>\n                <div>\n                    <label className=\"form-label\">Question</label>\n                    <textarea\n                        className=\"form-control\"\n                        id=\"exampleFormControlTextarea1\"\n                        rows=\"6\"\n                        value={data.content}\n                        onChange={(e) =>\n                            setData({ ...data, content: e.target.value })\n                        }\n                    ></textarea>\n                </div>\n                {type == \"multiple\" && (\n                    <div className=\"multiple-choice\">\n                        <div className=\"mt-3\">\n                            <label className=\"form-label\">Choice 1</label>\n                            <textarea\n                                className=\"form-control\"\n                                id=\"choice_1\"\n                                rows=\"1\"\n                                value={data.choice_1}\n                                onChange={(e) =>\n                                    setData({\n                                        ...data,\n                                        choice_1: e.target.value,\n                                    })\n                                }\n                            ></textarea>\n                        </div>\n                        <div className=\"mt-3\">\n                            <label className=\"form-label\">Choice 2</label>\n                            <textarea\n                                className=\"form-control\"\n                                id=\"choice_2\"\n                                rows=\"1\"\n                                value={data.choice_2}\n                                onChange={(e) =>\n                                    setData({\n                                        ...data,\n                                        choice_2: e.target.value,\n                                    })\n                                }\n                            ></textarea>\n                        </div>\n                        <div className=\"mt-3\">\n                            <label className=\"form-label\">Choice 3</label>\n                            <textarea\n                                className=\"form-control\"\n                                id=\"choice_3\"\n                                rows=\"1\"\n                                value={data.choice_3}\n                                onChange={(e) =>\n                                    setData({\n                                        ...data,\n                                        choice_3: e.target.value,\n                                    })\n                                }\n                            ></textarea>\n                        </div>\n                        <div className=\"mt-3\">\n                            <label className=\"form-label\">Choice 4</label>\n                            <textarea\n                                className=\"form-control\"\n                                id=\"choice_4\"\n                                rows=\"1\"\n                                value={data.choice_4}\n                                onChange={(e) =>\n                                    setData({\n                                        ...data,\n                                        choice_4: e.target.value,\n                                    })\n                                }\n                            ></textarea>\n                        </div>\n                    </div>\n                )}\n                <div className=\"fill-blank\">\n                    <div className=\"mt-3\">\n                        <label className=\"form-label\">Answer</label>\n                        <textarea\n                            className=\"form-control\"\n                            id=\"answer\"\n                            rows=\"2\"\n                            value={data.answer}\n                            onChange={(e) =>\n                                setData({\n                                    ...data,\n                                    answer: e.target.value,\n                                })\n                            }\n                        ></textarea>\n                    </div>\n                </div>\n\n                <input\n                    className=\"btn btn-outline-secondary mt-4\"\n                    type=\"submit\"\n                    value=\"Submit\"\n                    onClick={handleSubmit}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Form;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    createContent,\n    updateContent,\n    setCurrID,\n    getContents,\n} from \"../../actions/contents\";\nimport { useHistory, useLocation } from \"react-router\";\nimport $ from \"jquery\";\nimport { Link } from \"react-router-dom\";\nimport Form from \"../Form/Form\";\nconst EditForm = () => {\n    const dispatch = useDispatch();\n    const user = JSON.parse(localStorage.getItem(\"profile\"));\n    const currID = useSelector((state) => state.currid);\n    console.log(currID);\n    const content = useSelector((state) =>\n        currID ? state.contents.find((content) => content._id === currID) : null\n    );\n    const history = useHistory();\n    const contentType = content && content.hasChoices ? \"multiple\" : \"fillin\";\n    const [type, setType] = useState(contentType);\n    const [data, setData] = useState({\n        title: null,\n        content: null,\n        name: null,\n        createAt: null,\n        tag: null,\n        choice_1: null,\n        choice_2: null,\n        choice_3: null,\n        choice_4: null,\n        answer: null,\n        hasChoices: null,\n    });\n    console.log(data);\n\n    useEffect(() => {\n        if (content) {\n            setData(content);\n        } else setData({ ...data, hasChoices: type == \"multiple\" });\n    }, [content]);\n\n    const update = async () => {\n        await dispatch(\n            updateContent(currID, { ...data, name: user?.result?.name })\n        );\n        await dispatch(getContents());\n        history.goBack();\n    };\n\n    const handleChange = (e) => {\n        setType(e.target.value);\n        setData({ ...data, hasChoices: e.target.value == \"multiple\" });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (!data.content) {\n            window.alert(\"Please input your study content.\");\n            return;\n        }\n        if (data.content.length > 2000) {\n            window.alert(\"Content is too long! Must be under 2000 characters!\");\n            return;\n        }\n        if (type == \"multiple\") {\n            if (\n                !data[\"choice_1\"] &&\n                !data[\"choice_2\"] &&\n                !data[\"choice_3\"] &&\n                !data[\"choice_4\"]\n            ) {\n                window.alert(\"Please input at least 1 selection\");\n                return;\n            }\n            // if (\n            //     data[\"choice_1\"].length > 50 ||\n            //     data[\"choice_2\"].length > 50 ||\n            //     data[\"choice_3\"].length > 50 ||\n            //     data[\"choice_4\"].length > 50\n            // ) {\n            //     window.alert(\n            //         \"The selection is too long! Must be under 50 characters!\"\n            //     );\n            //     return;\n            // }\n        }\n        update();\n\n        console.log(data);\n    };\n    console.log(useSelector((state) => state.contents));\n    return (\n        <Form\n            type={type}\n            data={data}\n            setData={setData}\n            handleChange={handleChange}\n            handleSubmit={handleSubmit}\n        ></Form>\n    );\n};\n\nexport default EditForm;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    createContent,\n    updateContent,\n    setCurrID,\n    getContents,\n} from \"../../actions/contents\";\nimport { useHistory, useLocation } from \"react-router\";\nimport $ from \"jquery\";\nimport { Link } from \"react-router-dom\";\nimport Form from \"../Form/Form\";\nconst CreateForm = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const user = JSON.parse(localStorage.getItem(\"profile\"));\n    const [type, setType] = useState(\"fillin\");\n    const [data, setData] = useState({\n        title: null,\n        content: null,\n        name: null,\n        createAt: null,\n        tag: null,\n        choice_1: null,\n        choice_2: null,\n        choice_3: null,\n        choice_4: null,\n        answer: null,\n        hasChoices: null,\n    });\n\n    const clear = () => {};\n\n    const create = async () => {\n        await dispatch(createContent({ ...data, name: user?.result?.name }));\n        await dispatch(getContents());\n        history.goBack();\n    };\n\n    const handleChange = (e) => {\n        setType(e.target.value);\n        setData({ ...data, hasChoices: e.target.value == \"multiple\" });\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (!data.content) {\n            window.alert(\"Please input your study content.\");\n            return;\n        }\n        if (data.content.length > 300) {\n            window.alert(\"Content is too long! Must be under 300 characters!\");\n            return;\n        }\n        if (type == \"multiple\") {\n            if (\n                !data[\"choice_1\"] &&\n                !data[\"choice_2\"] &&\n                !data[\"choice_3\"] &&\n                !data[\"choice_4\"]\n            ) {\n                window.alert(\"Please input at least 1 selection\");\n                return;\n            }\n            // if (\n            //     data[\"choice_1\"].length > 50 ||\n            //     data[\"choice_2\"].length > 50 ||\n            //     data[\"choice_3\"].length > 50 ||\n            //     data[\"choice_4\"].length > 50\n            // ) {\n            //     window.alert(\n            //         \"The selection is too long! Must be under 50 characters!\"\n            //     );\n            //     return;\n            // }\n        }\n        create();\n    };\n    return (\n        <Form\n            type={type}\n            data={data}\n            setData={setData}\n            handleChange={handleChange}\n            handleSubmit={handleSubmit}\n        ></Form>\n    );\n};\n\nexport default CreateForm;\n","import React, { useState, useEffect } from \"react\";\nimport style from \"./style.css\";\n\nconst Home = () => {\n    let now = new Date();\n    const date = new Date();\n    const year = \"\" + date.getFullYear();\n    const month = (\"0\" + (date.getMonth() + 1)).slice(-2);\n    const day = \"\" + date.getDate();\n    const dateCode = +(year + month + day);\n    const [hour, setHour] = useState(now.getHours() % 12);\n    const [minute, setMinute] = useState(now.getMinutes());\n    const [second, setSecond] = useState(now.getSeconds());\n    useEffect(() => {\n        const interval = setInterval(() => {\n            let now = new Date();\n            setHour(now.getHours() % 12);\n            setMinute(now.getMinutes());\n            setSecond(now.getSeconds());\n        }, 1000);\n        return () => clearInterval(interval);\n    }, []);\n    return (\n        <div>\n            <div className=\"clock\">\n                <div className=\"clock_face\">\n                    <div className=\"clock_hands\">\n                        <div\n                            className=\"clock_hand clock_hours\"\n                            style={{\n                                transform: `rotate(${\n                                    (360 / 12) * hour + (360 / 12 / 60) * minute\n                                }deg)`,\n                            }}\n                        ></div>\n                        <div\n                            className=\"clock_hand clock_minutes\"\n                            style={{\n                                transform: `rotate(${\n                                    (360 / 60) * minute +\n                                    (360 / 60 / 60) * second\n                                }deg)`,\n                            }}\n                        ></div>\n                        <div\n                            className=\"clock_hand clock_seconds\"\n                            style={{\n                                transform: `rotate(${(360 / 60) * second}deg)`,\n                            }}\n                        ></div>\n                    </div>\n                </div>\n            </div>\n            {/* <div className=\"quote\">\n                <div className=\"text\">{quote.text}</div>\n                <div className=\"author\">{\"-----\" + quote.author}</div>\n            </div> */}\n        </div>\n    );\n};\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router\";\nconst Test = () => {\n    const inputStyle = {\n        margin: \"2em auto\",\n    };\n    const location = useLocation();\n    const [index, setIndex] = useState(0);\n    const contents = useSelector((state) => state.contents);\n    const { tag } = location.state;\n    const [filteredContents, setFilteredContents] = useState([\n        ...contents.filter((content) => content.tag === tag),\n    ]);\n    const [score, setScore] = useState(0);\n    const [answer, setAnswer] = useState(\"\");\n    const handleInputChange = (e) => {\n        setAnswer(e.target.value);\n    };\n\n    const switchNext = () => {\n        if (index === filteredContents.length - 1) return;\n        if (answer === filteredContents[index].answer) setScore(score + 1);\n        setIndex(index + 1);\n    };\n\n    const handleSubmit = async () => {\n        if (answer === filteredContents[index].answer)\n            alert(\n                `You got ${score + 1} ${\n                    score === 1 ? \"problem\" : \"problems\"\n                } right (${(\n                    (100 * (score + 1)) /\n                    filteredContents.length\n                ).toFixed(2)}%)`\n            );\n        else\n            alert(\n                `You got ${score} ${\n                    score === 1 ? \"problem\" : \"problems\"\n                } right (${((100 * score) / filteredContents.length).toFixed(\n                    2\n                )}%)`\n            );\n        setIndex(0);\n        setScore(0);\n    };\n    return (\n        <div className=\"w-10/12 flex-col items-center justify-content-center \">\n            <div className=\"w-100 flex-col items-center justify-content-center \">\n                <div className=\"title flex align-items-center justify-content-between\">\n                    <h4>Test Mode</h4>\n                    <h5 className=\"text-muted\">\n                        {index + 1}/{filteredContents.length}\n                    </h5>\n                </div>\n\n                <div className=\"text-3xl shadow-sm border-2 rounded-lg text-center h-32 flex-col items-center justify-center\">\n                    <div className=\"mt-4\">{filteredContents[index].title}</div>\n\n                    <div className=\"flex justify-center items-center\">\n                        <p variant=\"h5\" className=\"mt-2 text-gray-500 text-xl \">\n                            {`${\n                                filteredContents[index].name\n                                    ? filteredContents[index].name\n                                    : \"Nameless\"\n                            }`}\n                        </p>\n                        <p\n                            variant=\"h5\"\n                            className=\"mt-2 ml-4 text-gray-500 text-xl \"\n                        >\n                            {`published on ${\n                                new Date(\n                                    filteredContents[index].createdAt\n                                ).getMonth() + 1\n                            }/${new Date(\n                                filteredContents[index].createdAt\n                            ).getDate()}/${new Date(\n                                filteredContents[index].createdAt\n                            ).getFullYear()}`}\n                        </p>\n                    </div>\n                </div>\n\n                <div className=\"note mx-auto\" style={{ width: \"90%\" }}>\n                    <div className=\"border-1 rounded-lg shadow-sm p-3 mb-3 bg-body rounded m-5 p-5\">\n                        <p\n                            style={{\n                                whiteSpace: \"wrap\",\n                            }}\n                        >\n                            {filteredContents[index].content}\n                        </p>\n                    </div>\n\n                    {filteredContents[index].hasChoices && (\n                        <div className=\"choices flex items-center justify-center\">\n                            <div className=\"grid grid-cols-2 break-all mt-10 gap-10\">\n                                <div className=\"flex\">\n                                    <div className=\"form-check \">\n                                        <input\n                                            className=\"form-check-input me-10 \"\n                                            type=\"radio\"\n                                            name=\"multipleChoice\"\n                                            value={\n                                                filteredContents[index].choice_1\n                                            }\n                                            id=\"choice_1\"\n                                            onChange={handleInputChange}\n                                        />\n                                        <label\n                                            className=\"form-check-label \"\n                                            for=\"choice_1\"\n                                        >\n                                            {filteredContents[index].choice_1}\n                                        </label>\n                                    </div>\n                                </div>\n                                <div className=\"flex\">\n                                    <div className=\"form-check \">\n                                        <input\n                                            className=\"form-check-input\"\n                                            type=\"radio\"\n                                            name=\"multipleChoice\"\n                                            value={\n                                                filteredContents[index].choice_2\n                                            }\n                                            id=\"choice_2\"\n                                            onChange={handleInputChange}\n                                        />\n                                        <label for=\"choice_2\">\n                                            {filteredContents[index].choice_2}\n                                        </label>\n                                    </div>\n                                </div>\n                                <div className=\"flex\">\n                                    <div className=\"form-check \">\n                                        <input\n                                            className=\"form-check-input\"\n                                            type=\"radio\"\n                                            name=\"multipleChoice\"\n                                            value={\n                                                filteredContents[index].choice_3\n                                            }\n                                            id=\"choice_3\"\n                                            onChange={handleInputChange}\n                                        />\n                                        <label for=\"choice_3\">\n                                            {filteredContents[index].choice_3}\n                                        </label>\n                                    </div>\n                                </div>\n                                <div className=\"flex\">\n                                    <div className=\"form-check \">\n                                        <input\n                                            className=\"form-check-input\"\n                                            type=\"radio\"\n                                            name=\"multipleChoice\"\n                                            value={\n                                                filteredContents[index].choice_4\n                                            }\n                                            id=\"choice_4\"\n                                            onChange={handleInputChange}\n                                        />\n                                        <label className=\"\" for=\"choice_4\">\n                                            {filteredContents[index].choice_4}\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n                {!filteredContents[index].hasChoices && (\n                    <div className=\"answer-field flex\">\n                        <input\n                            className=\"shadow-sm p-3 mb-3 bg-body rounded justify-content-center\"\n                            type=\"text \"\n                            style={inputStyle}\n                            onChange={handleInputChange}\n                        ></input>\n                    </div>\n                )}\n                <div className=\"page-switch flex justify-content-center\">\n                    {index === filteredContents.length - 1 ? (\n                        <div\n                            type=\"button\"\n                            className=\"btn btn-outline-primary btn-sm mt-5\"\n                            onClick={handleSubmit}\n                        >\n                            Submit\n                        </div>\n                    ) : (\n                        <div\n                            type=\"button\"\n                            className=\"btn btn-outline-primary btn-sm mt-5\"\n                            onClick={switchNext}\n                        >\n                            Next\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Test;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport {\n    deleteContent,\n    setCurrID,\n    getContents,\n} from \"../../../actions/contents\";\nconst Content = () => {\n    const inputStyle = {\n        margin: \"2em auto\",\n    };\n    const location = useLocation();\n    const dispatch = useDispatch();\n    const contents = useSelector((state) => state.contents);\n    const currID = location.state.id;\n\n    const user = JSON.parse(localStorage.getItem(\"profile\"));\n    const [filteredContent, setfilteredContent] = useState(\n        contents.filter((content) => content._id === currID)[0]\n    );\n    const [showAnswer, setShowAnswer] = useState(false);\n    const [userAnswer, setUserAnswer] = useState(\"\");\n    const handleInputChange = (e) => {\n        setUserAnswer(e.target.value);\n    };\n    useEffect(\n        () =>\n            setfilteredContent(\n                contents.filter((content) => content._id === currID)[0]\n            ),\n        [contents]\n    );\n    const history = useHistory();\n\n    if (filteredContent) dispatch(setCurrID(filteredContent._id));\n    const deleteAndResetCurrID = async () => {\n        await dispatch(deleteContent(currID));\n        dispatch(setCurrID(0));\n    };\n    const handleDelete = async (e) => {\n        e.preventDefault();\n        deleteAndResetCurrID();\n        history.goBack();\n    };\n    const handleShowAnswer = () => {\n        setShowAnswer(!showAnswer);\n    };\n\n    const checkAnswer = () => {\n        if (filteredContent?.answer === userAnswer) {\n            alert(\"Great! You got it right!\");\n        } else {\n            alert(\"Oh no! it is not correct!\");\n        }\n    };\n    return (\n        <div className=\"w-10/12 flex-col items-center justify-center \">\n            <div className=\"w-100 text-3xl shadow-sm border-2 rounded-lg text-center h-32 flex-col items-center justify-center\">\n                <div className=\"mt-4 text-2xl\">{filteredContent?.title}</div>\n                <div className=\"flex justify-center items-center\">\n                    <p variant=\"h5\" className=\"mt-2 text-gray-500 text-xl \">\n                        {`${\n                            filteredContent?.name\n                                ? filteredContent.name\n                                : \"Nameless\"\n                        }`}\n                    </p>\n                    <p\n                        variant=\"h5\"\n                        className=\"mt-2 ml-4 text-gray-500 text-xl \"\n                    >\n                        {`published on ${\n                            new Date(filteredContent?.createdAt).getMonth() + 1\n                        }/${new Date(\n                            filteredContent?.createdAt\n                        ).getDate()}/${new Date(\n                            filteredContent?.createdAt\n                        ).getFullYear()}`}\n                    </p>\n                </div>\n            </div>\n\n            <div className=\"note mx-auto\" style={{ width: \"90%\" }}>\n                <div className=\"border-1 rounded-lg shadow-sm p-3 mb-3 bg-body rounded m-5 p-5\">\n                    <p\n                        style={{\n                            whiteSpace: \"wrap\",\n                        }}\n                    >\n                        {filteredContent?.content}\n                    </p>\n                </div>\n\n                {filteredContent?.hasChoices && (\n                    <div className=\"choices flex items-center justify-center\">\n                        <div className=\"grid grid-cols-2 break-all mt-10 gap-10\">\n                            <div className=\"flex\">\n                                <div className=\"form-check \">\n                                    <input\n                                        className=\"form-check-input me-10 \"\n                                        type=\"radio\"\n                                        name=\"multipleChoice\"\n                                        value={filteredContent?.choice_1}\n                                        id=\"choice_1\"\n                                        onChange={handleInputChange}\n                                    />\n                                    <label\n                                        className=\"form-check-label \"\n                                        for=\"choice_1\"\n                                    >\n                                        {filteredContent?.choice_1}\n                                    </label>\n                                </div>\n                            </div>\n                            <div className=\"flex\">\n                                <div className=\"form-check \">\n                                    <input\n                                        className=\"form-check-input\"\n                                        type=\"radio\"\n                                        name=\"multipleChoice\"\n                                        value={filteredContent?.choice_2}\n                                        id=\"choice_2\"\n                                        onChange={handleInputChange}\n                                    />\n                                    <label for=\"choice_2\">\n                                        {filteredContent?.choice_2}\n                                    </label>\n                                </div>\n                            </div>\n                            <div className=\"flex\">\n                                <div className=\"form-check \">\n                                    <input\n                                        className=\"form-check-input\"\n                                        type=\"radio\"\n                                        name=\"multipleChoice\"\n                                        value={filteredContent?.choice_3}\n                                        id=\"choice_3\"\n                                        onChange={handleInputChange}\n                                    />\n                                    <label for=\"choice_3\">\n                                        {filteredContent?.choice_3}\n                                    </label>\n                                </div>\n                            </div>\n                            <div className=\"flex\">\n                                <div className=\"form-check \">\n                                    <input\n                                        className=\"form-check-input\"\n                                        type=\"radio\"\n                                        name=\"multipleChoice\"\n                                        value={filteredContent?.choice_4}\n                                        id=\"choice_4\"\n                                        onChange={handleInputChange}\n                                    />\n                                    <label className=\"\" for=\"choice_4\">\n                                        {filteredContent?.choice_4}\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n                {showAnswer && (\n                    <div className=\"fill-blank\">\n                        <div className=\"shadow-sm p-3 mb-3 bg-body rounded m-5 p-5\">\n                            <p>{filteredContent?.answer}</p>\n                        </div>\n                    </div>\n                )}\n            </div>\n            {!filteredContent?.hasChoices && (\n                <div className=\"answer-field flex\">\n                    <input\n                        className=\"shadow-sm p-3 mb-3 bg-body rounded justify-content-center\"\n                        type=\"text \"\n                        style={inputStyle}\n                        onChange={handleInputChange}\n                    ></input>\n                </div>\n            )}\n\n            <div className=\"function-btns flex justify-content-center mt-10\">\n                <div\n                    type=\"button\"\n                    className=\"btn btn-outline-primary me-5 mt-3\"\n                    onClick={checkAnswer}\n                >\n                    Check\n                </div>\n                <div\n                    type=\"button\"\n                    className=\"btn btn-outline-primary ms-5 mt-3\"\n                    onClick={handleShowAnswer}\n                >\n                    {showAnswer ? \"Hide\" : \"Reveal\"}\n                </div>\n            </div>\n\n            {(user?.result?.googleId === filteredContent?.creator ||\n                user?.result?._id === filteredContent?.creator) && (\n                <div className=\"d-flex justify-content-evenly mt-20 pb-20\">\n                    <Link\n                        to={{\n                            pathname: `/contents/${filteredContent?._id}`,\n                            state: {\n                                id: filteredContent?._id,\n                            },\n                        }}\n                        type=\"button\"\n                        className=\"btn btn-outline-secondary\"\n                    >\n                        Edit\n                    </Link>\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-danger\"\n                        onClick={handleDelete}\n                    >\n                        Delete\n                    </button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Content;\n","import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { Card, Typography } from \"@mui/material\";\n\nconst TagCard = ({ tag, option }) => {\n    const contents = useSelector((state) => state.contents);\n    const numberOfPosts = contents.filter(\n        (content) => content.tag === tag\n    ).length;\n    return (\n        <div>\n            <Link\n                to={\n                    option === \"test\"\n                        ? {\n                              pathname: `/test`,\n                              state: { tag: tag },\n                          }\n                        : {\n                              pathname: `/tags/${tag}`,\n                              state: { tag: tag },\n                          }\n                }\n                className=\"card text-dark bg-light mb-3\"\n                style={{ maxWidth: \"18rem\", textDecoration: \"none\" }}\n            >\n                <Card\n                    className=\"h-40 w-36 flex flex-col justify-center items-center hover:shadow-xl\"\n                    variant=\"outlined\"\n                >\n                    <h2 className=\"text-xl font-extrabold m-0\">{tag}</h2>\n                    <Typography variant=\"h6\" className=\"text-sm m-0\">\n                        {numberOfPosts}\n                        {`${numberOfPosts == 1 ? ` post` : ` posts`}`}\n                    </Typography>\n                </Card>\n            </Link>\n        </div>\n    );\n};\n\nexport default TagCard;\n","import React from \"react\";\nimport TagCard from \"./Content/TagCard\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router\";\nconst Tags = () => {\n    const location = useLocation();\n    const option = location.state.option;\n    const user = JSON.parse(localStorage.getItem(\"profile\"));\n    let contents = useSelector((state) => state.contents);\n    if (option === \"review\" || option === \"test\")\n        contents = contents.filter(\n            (content) =>\n                user?.result?.googleId === content.creator ||\n                user?.result?._id === content.creator\n        );\n\n    const uniqTags = [...new Set(contents.map((content) => content.tag))];\n    return (\n        <div>\n            <div className=\"mt-12 ml-20 grid sm:grid-cols-1 md:grid-cols-4 \">\n                {uniqTags.map((tag) => (\n                    <div className=\"col-3 d-flex justify-content-center p-5 text-center \">\n                        <TagCard tag={tag} option={option} />\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Tags;\n","import React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { Card, CardContent, Typography } from \"@mui/material\";\nimport \"./ContentList.css\";\nconst ContentList = () => {\n    const location = useLocation();\n    // const contents = useSelector((state) => state.contents);\n    const { tag } = location.state;\n    const contents = useSelector((state) => state.contents);\n    const [filteredContents, setFilteredContents] = useState([\n        contents.filter((content) => content.tag === tag),\n    ]);\n    //very important, keeps updating the content list\n    useEffect(\n        () =>\n            setFilteredContents(\n                contents.filter((content) => content.tag === tag)\n            ),\n        [contents]\n    );\n\n    return (\n        <div className=\"mt-12 w-10/12 flex items-center justify-center\">\n            <ul className=\"w-100\">\n                {filteredContents.map((content) => (\n                    <Link\n                        to={{\n                            pathname: `${content.tag}/${content._id}`,\n                            state: { id: content._id },\n                        }}\n                        className=\"shadow-sm  no-underline \"\n                    >\n                        <div className=\"post\">\n                            <div className=\"flex flex-col justify-center items-center mt-2 p-3 text-black\">\n                                <h3 className=\"text-2xl\">{content.title}</h3>\n                                <div className=\"flex justify-evenly w-full\">\n                                    <h5\n                                        variant=\"h5\"\n                                        className=\"mt-2 text-gray-500\"\n                                    >\n                                        {`${\n                                            content.name\n                                                ? content.name\n                                                : \"Nameless\"\n                                        }`}\n                                    </h5>\n                                    <h5 className=\"mt-2 ml-4 text-gray-500\">\n                                        {`${new Date(\n                                            content.createdAt\n                                        ).getFullYear()}/${\n                                            new Date(\n                                                content.createdAt\n                                            ).getMonth() + 1\n                                        }/${new Date(\n                                            content.createdAt\n                                        ).getDate()}`}\n                                    </h5>\n                                </div>\n                            </div>\n                        </div>\n                    </Link>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default ContentList;\n","export default __webpack_public_path__ + \"static/media/login_logo.3e7bb820.png\";","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport loginLogo from \"./login_logo.png\";\nimport GoogleLogin from \"react-google-login\";\nimport GoogleIcon from \"@mui/icons-material/Google\";\nimport { useHistory } from \"react-router-dom\";\nimport { signup, login } from \"../../actions/auth\";\nimport \"./Auth.css\";\n// authentication form(sign up & log in)\nconst Auth = () => {\n    // the form contains four information(login only needs email and password)\n    const [formData, setFormData] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n    });\n\n    // history is for getting back to the previous pages\n    const history = useHistory();\n\n    // using hook to define four states indicating four possible invalid cases\n    const [passwordWrongError, setPasswordWrongError] = useState(false);\n    const [userNotExistError, setUserNotExistError] = useState(false);\n    const [userAlreadyExistsError, setUserAlreadyExistsError] = useState(false);\n    const [confirmPasswordNotSameError, setConfirmPasswordNotSameError] =\n        useState(false);\n\n    const [isSignup, setIsSignUp] = useState(false);\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (isSignup) {\n            const signupPromise = dispatch(signup(formData, history));\n            signupPromise.then((promise) => {\n                if (promise?.response?.status === 400) {\n                    setUserNotExistError(false);\n                    setUserAlreadyExistsError(false);\n                    setPasswordWrongError(false);\n                    setConfirmPasswordNotSameError(true);\n                } else if (promise?.response?.status === 404) {\n                    setUserNotExistError(false);\n                    setUserAlreadyExistsError(true);\n                    setPasswordWrongError(false);\n                    setConfirmPasswordNotSameError(false);\n                }\n            });\n            // setErrorMessage(false);\n        } else {\n            const loginPromise = dispatch(login(formData, history));\n            loginPromise.then((promise) => {\n                if (promise?.response?.status === 400) {\n                    setUserNotExistError(false);\n                    setUserAlreadyExistsError(false);\n                    setPasswordWrongError(true);\n                    setConfirmPasswordNotSameError(false);\n                } else if (promise?.response?.status === 404) {\n                    setUserNotExistError(true);\n                    setUserAlreadyExistsError(false);\n                    setPasswordWrongError(false);\n                    setConfirmPasswordNotSameError(false);\n                }\n            });\n        }\n    };\n    const handleChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    };\n    const dispatch = useDispatch();\n\n    const switchMode = () => {\n        setIsSignUp(!isSignup);\n        setUserNotExistError(false);\n        setUserAlreadyExistsError(false);\n        setPasswordWrongError(false);\n        setConfirmPasswordNotSameError(false);\n    };\n    const googleSuccess = async (res) => {\n        const result = res?.profileObj;\n        const token = res?.tokenId;\n        try {\n            dispatch({ type: \"AUTH\", data: { result, token } });\n            history.push(\"/\");\n        } catch (err) {\n            console.log(err);\n        }\n    };\n    const googleFailure = () => {\n        console.log(\"Failed\");\n    };\n    return (\n        <div className=\"login\">\n            <img src={loginLogo} />\n            <form onSubmit={handleSubmit}>\n                {isSignup && (\n                    <input\n                        placeholder=\"name\"\n                        name=\"name\"\n                        type=\"text\"\n                        onChange={handleChange}\n                    />\n                )}\n                <input\n                    placeholder=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    onChange={handleChange}\n                />\n                <input\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    type=\"password\"\n                    onChange={handleChange}\n                />\n                {passwordWrongError && (\n                    <p className=\"login-error\">Password is wrong!</p>\n                )}\n                {userNotExistError && (\n                    <p className=\"login-error\">User Doesn't Exist!</p>\n                )}\n\n                {isSignup && (\n                    <input\n                        placeholder=\"Confirm the password\"\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                        onChange={handleChange}\n                    />\n                )}\n                {userAlreadyExistsError && (\n                    <p className=\"login-error\">User Already Exists</p>\n                )}\n                {confirmPasswordNotSameError && (\n                    <p className=\"login-error\">\n                        Confirmation Password does not match!\n                    </p>\n                )}\n                <button className=\"button\" type=\"submit\">\n                    {isSignup ? \"Sign Up\" : \"Log In\"}\n                </button>\n                {!isSignup && (\n                    <GoogleLogin\n                        clientId=\"904387753558-3jk0im9jdja4slp5cnd09ijdoh9khkun.apps.googleusercontent.com\"\n                        render={(renderProps) => (\n                            <div className=\"button\">\n                                <GoogleIcon className=\"mr-2\" />\n                                <button\n                                    onClick={renderProps.onClick}\n                                    disabled={renderProps.disabled}\n                                >\n                                    Log In\n                                </button>\n                            </div>\n                        )}\n                        onSuccess={googleSuccess}\n                        onFailure={googleFailure}\n                        cookiePolicy=\"single_host_origin\"\n                    />\n                )}\n            </form>\n            {isSignup ? (\n                <p>\n                    Already a member?\n                    <span className=\"login__register\" onClick={switchMode}>\n                        Click here to log in\n                    </span>\n                </p>\n            ) : (\n                <p>\n                    Not registered yet?\n                    <span className=\"login__register\" onClick={switchMode}>\n                        Sign up Now!\n                    </span>\n                </p>\n            )}\n        </div>\n    );\n};\n\nexport default Auth;\n","import { AUTH } from \"../constants/actions\";\nimport * as api from \"../api/index\";\n\nexport const login = (formData, history) => async (dispatch) => {\n    try {\n        //log in\n        const { data } = await api.logIn(formData);\n        dispatch({ type: AUTH, data });\n        history.push(\"/\");\n    } catch (err) {\n        console.log(err);\n        return err;\n    }\n};\n\nexport const signup = (formData, history) => async (dispatch) => {\n    try {\n        //sign up\n        const { data } = await api.signUp(formData);\n        dispatch({ type: AUTH, data });\n        history.push(\"/\");\n    } catch (err) {\n        console.log(err);\n        return err;\n    }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { getContents } from \"./actions/contents\";\nimport Nav from \"./components/Navbar/Nav\";\nimport Header from \"./components/Navbar/Header\";\nimport EditForm from \"./components/Edit/EditForm\";\nimport CreateForm from \"./components/Create/CreateForm\";\nimport Home from \"./components/Home/Home\";\nimport Test from \"./components/Test/Test\";\nimport Content from \"./components/Contents/Content/Content\";\nimport Tags from \"./components/Contents/Tags\";\nimport ContentList from \"./components/Contents/Content/ContentList\";\nimport Auth from \"./components/Auth/Auth\";\nimport \"./index.css\";\nconst App = () => {\n    // const [currID, setcurrID] = useState(0);\n    const dispatch = useDispatch();\n    const currID = useSelector((state) => state.currid);\n    useEffect(() => {\n        dispatch(getContents());\n    }, [currID, dispatch]);\n    return (\n        <Router>\n            <Header />\n            <div\n                className=\"mt-40 d-flex flex-column align-items-center \"\n                style={{\n                    height: \"92vh\",\n                    width: \"60%\",\n                    padding: \"8em\",\n                    margin: \"0 auto\",\n                    boxShadow: \"1px 50px 36px -3px rgba(0,0,0,0.31)\",\n                }}\n            >\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Home />\n                    </Route>\n                    <Route path=\"/test\">\n                        <Test />\n                    </Route>\n                    <Route path=\"/create\">\n                        <CreateForm />\n                    </Route>\n                    <Route path=\"/contents/:id\">\n                        <EditForm />\n                    </Route>\n                    <Route path=\"/tags/:tags/:id\">\n                        <Content />\n                    </Route>\n                    <Route path=\"/tags/:tag\">\n                        <ContentList />\n                    </Route>\n                    <Route path=\"/tags\">\n                        <Tags />\n                    </Route>\n                    <Route path=\"/test\">\n                        <Test />\n                    </Route>\n                    <Route path=\"/auth\" exact component={Auth} />\n                </Switch>\n            </div>\n        </Router>\n    );\n};\n\nexport default App;\n","import { SET_CURRID } from \"../constants/actions\";\nconst currid = (currid = 0, action) => {\n  switch (action.type) {\n    case SET_CURRID:\n      return action.payload;\n    default:\n      return currid;\n  }\n};\n\nexport default currid;\n","import { AUTH, LOGOUT } from \"../constants/actions\";\n\n// the reducer for authentication has an object with a key \"authData\" initialized as a null.\nconst authReducer = (state = { authData: null }, action) => {\n    switch (action.type) {\n        // if the action is AUTH type we will put the action data(authentication information) to localStorate to indicate the \"Logged in\" state\n        case AUTH:\n            localStorage.setItem(\n                \"profile\",\n                JSON.stringify({ ...action?.data })\n            );\n            return { ...state, authData: action?.data };\n        case LOGOUT:\n            localStorage.clear();\n            return { ...state, authData: null };\n        default:\n            return state;\n    }\n};\n\nexport default authReducer;\n","import { combineReducers } from \"redux\";\n\nimport contents from \"./contents\";\nimport currid from \"./currid\";\nimport auth from \"./auth\";\n\nexport default combineReducers({ contents, currid, auth });\n","import { FETCH_ALL, CREATE, UPDATE, DELETE } from \"../constants/actions\";\nexport default (contents = [], action) => {\n    switch (action.type) {\n        case FETCH_ALL:\n            return action.payload;\n        case CREATE:\n            return [...contents, action.payload];\n        case UPDATE:\n            return contents;\n        case DELETE:\n            return contents.filter(\n                (content) => content._id !== action.payload._id\n            );\n        default:\n            return contents;\n    }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport reducers from \"./reducers\";\nconst store = createStore(reducers, applyMiddleware(thunk));\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}